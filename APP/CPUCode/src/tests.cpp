#include "cam_test_engine.h"

void Test1::generateInputValues()
{
	//											    0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	//										   	   16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	//										   	   32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
	//										   	   48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

	//											   64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
	//											   80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95
	input_WE = new SLIC_DATATYPE[96]    		  { 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0,
													1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
													0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0,
													0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

													1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
													0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	input_WR_ADDR = new SLIC_DATATYPE[96]		  { 0, 0, 1, 0, 2, 0, 3, 0, 0, 0, 0, 0, 1, 0, 2, 0,
													3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
													0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0,
													0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

    												3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    												0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	input_DIN = new SLIC_DATATYPE[96]			  { 5, 0, 7, 0, 9, 0,11, 0, 5, 7, 9,11, 5, 0, 5, 0,
													5, 0, 0, 5, 7, 9,11, 0, 1, 2, 3, 4, 5, 6, 7, 8,
													9,10,11,12,13,14,15, 0, 8, 0, 8, 0, 0, 5, 8, 0,
    												0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15,

    												5, 0, 7, 0, 8, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    												0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15};

	input_EN = new SLIC_DATATYPE[96];
	std::fill_n(input_EN, 96, 1);

#ifdef CAM_MULTIPLE
	input_CS = new SLIC_DATATYPE[96];
	std::fill_n(input_CS, 96, 0);
#endif

#ifdef DEBUG
	for (int i = 0; i < 96; i++)
		printf("%d - %d %d %d %d\n", i, input_WE[i], input_WR_ADDR[i], input_DIN[i], input_EN[i]);
#endif
}

void Test1::generateExpectedValues()
{
	//												    0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	//											   	   16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	//											   	   32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
	//											   	   48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

	//												   64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
	//												   80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95
	expect_ASSERT = new SLIC_DATATYPE[96]			  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
														0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
														1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1,
														1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 };

	expect_MATCH_ADDR = new SLIC_DATATYPE[96]		  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 4, 8, 0, 0, 0,
														0, 0, 0, 0,15, 0, 0, 0, 0, 0, 0, 0, 0,15, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,10, 5,
														0, 0, 0, 0, 0, 0,10, 0, 0, 5, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 8, 0, 4, 2, 1, 0, 0, 0, 0, 0 };

	expect_MULTIPLE_MATCH = new SLIC_DATATYPE[96]	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
														0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	expect_SINGLE_MATCH = new SLIC_DATATYPE[96]	 	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0 };

	expect_MATCH = new SLIC_DATATYPE[96]			  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0,
														0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1,
														0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0 };

	expect_BUSY = new SLIC_DATATYPE[96]				  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

	    												0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	    												0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	expect_READ_WARNING = new SLIC_DATATYPE[96]	  	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

#ifdef DEBUG
	for (int i = 0; i < 96; i++)
		printf("%d - %d %d %d %d %d %d %d\n", i, expect_ASSERT[i], expect_MATCH_ADDR[i], expect_MULTIPLE_MATCH[i], expect_SINGLE_MATCH[i], expect_MATCH[i], expect_BUSY[i], expect_READ_WARNING[i]);
#endif
}

void Test2::generateInputValues()
{
	//												    0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	//											   	   16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	//											   	   32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
	//											   	   48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

	//												   64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
	//												   80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95
	input_WE = new SLIC_DATATYPE[96] 				  { 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	input_WR_ADDR = new SLIC_DATATYPE[96] 	  		  { 3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 1, 0, 2, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														3, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	input_DIN = new SLIC_DATATYPE[96] 		  		  { 9, 0, 8, 0, 7, 0, 6, 0, 0, 9, 8, 7, 6, 0, 0, 0,
														6, 0, 5, 0, 4, 0, 3, 0, 9, 8, 7, 6, 5, 4, 3, 2,
														1, 0, 1, 0, 1, 0, 1, 0, 0, 3, 2, 1, 0, 0, 0, 0,
														8, 0, 6, 0, 4, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														5, 0, 7, 0, 8, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15 };

	input_EN = new SLIC_DATATYPE[96];
	std::fill_n(input_EN, 96, 1);

#ifdef CAM_MULTIPLE
	input_CS = new SLIC_DATATYPE[96];
	std::fill_n(input_CS, 96, 0);
#endif

#ifdef DEBUG
	for (int i = 0; i < 96; i++)
		printf("%d - %d %d %d %d\n", i, input_WE[i], input_WR_ADDR[i], input_DIN[i], input_EN[i]);
#endif
}

void Test2::generateExpectedValues()
{
	//											        0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	//										   	       16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	//										   	       32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
	//										   	       48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63

	//											 	   64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79
	//											       80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95
    expect_ASSERT = new SLIC_DATATYPE[96]		  	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0};

    expect_MATCH_ADDR = new SLIC_DATATYPE[96]	  	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 4, 2, 1, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 4, 2, 1,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,15, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 8, 0, 4, 2, 1, 0, 0, 0, 0, 0 };

    expect_MULTIPLE_MATCH = new SLIC_DATATYPE[96] 	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

    expect_SINGLE_MATCH = new SLIC_DATATYPE[96] 	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0 };

    expect_MATCH = new SLIC_DATATYPE[96]		  	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0 };

    expect_BUSY = new SLIC_DATATYPE[96]	 	  		  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

    expect_READ_WARNING = new SLIC_DATATYPE[96] 	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,

														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

#ifdef DEBUG
	for (int i = 0; i < 96; i++)
		printf("%d - %d %d %d %d %d %d %d\n", i, expect_ASSERT[i], expect_MATCH_ADDR[i], expect_MULTIPLE_MATCH[i], expect_SINGLE_MATCH[i], expect_MATCH[i], expect_BUSY[i], expect_READ_WARNING[i]);
#endif
}

void Test3::generateInputValues()
{
	// input variables									0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	//											   	   16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	input_WE = new SLIC_DATATYPE[32] 				  { 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0,
	    												0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	input_WR_ADDR = new SLIC_DATATYPE[32] 			  { 0, 0, 1, 0, 2, 0, 3, 0, 0, 0, 0, 0, 2, 0, 3, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	input_DIN = new SLIC_DATATYPE[32] 				  { 1, 0, 2, 0, 3, 0, 3, 0, 1, 2, 3, 4, 5, 0, 6, 0,
														0, 0, 1, 2, 3, 4, 5, 6, 0, 0, 0, 0, 0, 0, 0, 0 };
	input_EN = new SLIC_DATATYPE[32];
	std::fill_n(input_EN, 32, 1);

#ifdef CAM_MULTIPLE
	input_CS = new SLIC_DATATYPE[32];
	std::fill_n(input_CS, 32, 0);
#endif

#ifdef DEBUG
	for (int i = 0; i < 32; i++)
		printf("%d - %d %d %d %d\n", i, input_WE[i], input_WR_ADDR[i], input_DIN[i], input_EN[i]);
#endif
}

void Test3::generateExpectedValues()
{
	// expected output
		// 												0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
		//										   	   16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	expect_ASSERT = new SLIC_DATATYPE[32]			  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
														0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 };
	expect_MATCH_ADDR = new SLIC_DATATYPE[32]	 	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,12, 0, 0, 0, 0,
														0, 0, 0, 1, 2, 0, 0, 4, 8, 0, 0, 0, 0, 0, 0, 0 };
	expect_MULTIPLE_MATCH = new SLIC_DATATYPE[32]	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_SINGLE_MATCH = new SLIC_DATATYPE[32]		  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0,
														0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 };
	expect_MATCH = new SLIC_DATATYPE[32]			  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0,
														0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0 };
	expect_BUSY = new SLIC_DATATYPE[32]				  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_READ_WARNING = new SLIC_DATATYPE[32]		  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

#ifdef DEBUG
	for (int i = 0; i < 32; i++)
		printf("%d - %d %d %d %d %d %d %d\n", i, expect_ASSERT[i], expect_MATCH_ADDR[i], expect_MULTIPLE_MATCH[i], expect_SINGLE_MATCH[i], expect_MATCH[i], expect_BUSY[i], expect_READ_WARNING[i]);
#endif
}

#ifdef CAM_MULTIPLE
void TestM1::generateInputValues()
{
	// input variables									0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	//											   	   16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	//												   32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
	//											   	   48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
	input_CS = new SLIC_DATATYPE[64]				  { 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0,
														2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														3, 3, 3, 3, 3, 3, 3, 2, 1, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	input_WE = new SLIC_DATATYPE[64] 				  { 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	input_WR_ADDR = new SLIC_DATATYPE[64] 			  { 0, 0, 1, 0, 2, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														3, 0, 4, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	input_DIN = new SLIC_DATATYPE[64] 				  { 5, 0, 7, 0, 9, 0, 2, 0, 4, 0, 6, 0, 0, 0, 0, 0,
														5, 7, 9, 2, 4, 6, 5, 7, 9, 2, 4, 6, 0, 0, 0, 0,
														8, 0, 8, 0, 8, 0, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	input_EN = new SLIC_DATATYPE[64];
	std::fill_n(input_EN, 64, 1);

#ifdef DEBUG
	for (int i = 0; i < 64; i++)
		printf("%d - %d %d %d %d\n", i, input_WE[i], input_WR_ADDR[i], input_DIN[i], input_EN[i]);
#endif
}

void TestM1::generateExpectedValues()
{
	// expected output
	// 													0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	//											   	   16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	//												   32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
	//											   	   48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
	expect_ASSERT = new SLIC_DATATYPE[64]			  { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,
														0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0,
														0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_MATCH_ADDR = new SLIC_DATATYPE[64]	 	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 1, 2, 4, 1, 2, 4, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0,56, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_MULTIPLE_MATCH = new SLIC_DATATYPE[64]	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_SINGLE_MATCH = new SLIC_DATATYPE[64]		  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_MATCH = new SLIC_DATATYPE[64]			  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_BUSY = new SLIC_DATATYPE[64]				  { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_READ_WARNING = new SLIC_DATATYPE[64]		  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

#ifdef DEBUG
	for (int i = 0; i < 64; i++)
		printf("%d - %d %d %d %d %d %d %d\n", i, expect_ASSERT[i], expect_MATCH_ADDR[i], expect_MULTIPLE_MATCH[i], expect_SINGLE_MATCH[i], expect_MATCH[i], expect_BUSY[i], expect_READ_WARNING[i]);
#endif
}

void TestM2::generateInputValues()
{
	// input variables									0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	//											   	   16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	//												   32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
	//											   	   48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
	input_CS = new SLIC_DATATYPE[64]				  { 0, 0, 1, 1, 2, 2, 3, 3, 0, 0, 0, 0, 1, 1, 1, 1,
														2, 2, 2, 2, 3, 3, 3, 3, 0, 0, 2, 2, 0, 0, 2, 0,
														0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	input_WE = new SLIC_DATATYPE[64] 				  { 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	input_WR_ADDR = new SLIC_DATATYPE[64] 			  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

	input_DIN = new SLIC_DATATYPE[64] 				  { 0, 0, 1, 0, 2, 0, 3, 0, 0, 1, 2, 3, 0, 1, 2, 3,
														0, 1, 2, 3, 0, 1, 2, 3, 0, 4, 8, 4, 4, 4, 8, 4,
														0, 1, 2, 3, 0, 1, 2, 3, 0, 1, 2, 8, 0, 1, 2, 3,
														4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4 };
	input_EN = new SLIC_DATATYPE[64];
	std::fill_n(input_EN, 64, 1);

#ifdef DEBUG
	for (int i = 0; i < 64; i++)
		printf("%d - %d %d %d %d\n", i, input_WE[i], input_WR_ADDR[i], input_DIN[i], input_EN[i]);
#endif
}

void TestM2::generateExpectedValues()
{
	// expected output
	// 													0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10,11,12,13,14,15
	//											   	   16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31
	//												   32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47
	//											   	   48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63
	expect_ASSERT = new SLIC_DATATYPE[64]			  { 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1,
														1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 1,
														0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
														1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_MATCH_ADDR = new SLIC_DATATYPE[64]	 	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,
														0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2,
														0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0,
														1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_MULTIPLE_MATCH = new SLIC_DATATYPE[64]	  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_SINGLE_MATCH = new SLIC_DATATYPE[64]		  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,
														0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,
														0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
														1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_MATCH = new SLIC_DATATYPE[64]			  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0,
														0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,
														0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0,
														1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_BUSY = new SLIC_DATATYPE[64]				  { 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
	expect_READ_WARNING = new SLIC_DATATYPE[64]		  { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
														0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };

#ifdef DEBUG
	for (int i = 0; i < 64; i++)
		printf("%d - %d %d %d %d %d %d %d\n", i, expect_ASSERT[i], expect_MATCH_ADDR[i], expect_MULTIPLE_MATCH[i], expect_SINGLE_MATCH[i], expect_MATCH[i], expect_BUSY[i], expect_READ_WARNING[i]);
#endif
}
#endif
